Features of java :
1) Simple :
   Java is considered as one of the simple language because it does not have complex Features like operator overloading , multiple inheritance, pointers, and explicit memory allocation.
2) Object oriented :
   Object oriented programming is a way of organizing programs as collection of objects, each of which represents an instance of a class.

     2.1 ) Abstraction :
           Abstraction is process where you show only relevant data and hide unnecessary details of an object from the user.
     2.2 ) Encapsulation :
           Binding the data with code that manipulates it.
           It keeps the data and the code safe from external interference.
     2.3 ) Inheritance :
           An object acquires some or all the properties of another object.

     2.4 ) Polymorphism :
           Polymorphism means to process differently based on their data type. In other words, one method with multiple implementation for a certain class of action.

           2 types of Polymorphism :
               Method overloading : Static Polymorphism
               Method overriding  : Dynamic Polymorphism

3) Robust language :
   Early checking for possible errors. The main features of Java that makes it robust are :
      * Garbage collection
      * Exception handling
      * Memory allocation

4) Secure :
   We don't have pointers and we cannot access out of bound arrays in Java.

5) Distributed :
   We can create distributed applications - RMI , EJB,

6) Multithreading :
   It is a java feature that allows concurrent execution of 2 or more parts of a program for maximum utilization of CPU.

7) Portable :
   It is platform independent.


Principle of Java :
   "Write once, run anywhere."

  // Hello world statement.
  public static void main ()
  public : access specifier . this makes the main method public. That means, we can call the method from outside the class.
  static : we do not need to create object for static methods to run. They can run on their own.
  void : it does not return anything.
  main : It is a method name. This is the entry point method from which JVM can run your program.
  String[] args : used for command line arguments that are passed as strings.


In java, 
In other words, super keyword is used by a sub class whenever it needs to refer to its immediate super class.

Need of Super class:
Whenever the derived class inherits the base class features, there is a possibility that base class features are similar
to derived class features and JVM gets an ambiguity.
In order to differentiate between base class feature and derived class feature must be preceded by super keyword.

Super at three level:
1) Super at variable level :
   Syntax :
      super.baseclassdatamember.

Whenever the derived class inherits the base class data members, there is a possibility that base class data members 
are similar to derived class features and JVM gets an ambiguity.
In order to differentiate between base class data memeber and derived class member must be preceded by super keyword.

If we are not writing super keyword before the base class data member name, then, it will be referred as parent class 
data member.


2) Super at Method level
   The super keyword can also be used to invoke or call parent class method.
   It should be used in case of method over riding.

3) Super at Constructor level 
   Super keyword can also be used to invoke or call the parent class Constructor.
   To establish the connection between the base class constructor and derived class constructor, JVM provides 
   super().
   super() is added in each class constructor automatically.
   
Garbage Collection:
In Java, garbage means unreferenced object.
Garbage collection is process of reclaiming the runtime unused memory automatically.
In other words, it is the way to destroy the ununsed objects.
Java provides better memory management.

Adavantages of garbage collection:
 - It makes Java memory efficient because, garbage collector removes the unreferenced objects from the heap memory.
 - It is is automatically done by the garbage collector (it is a part of JVM), so we dont need to make extra efforts.

How can Object be unreferenced?
 - by nulling the refernce
 - by assigning the reference to another.
 - anonymous object
 
Assignment :
String class and String Buffer class.
   - What are the classes and methods?


Difference Between String and StringBuffer Class in Java
Storage	String constant pool.	Heap Memory.
Definition of String
“String” is a class in Java. 
The object of the class String is of fixed length, and most important to remember, the object of String class is “immutable”. 
Once you initialize the String object, you can not modify that object again. 
The object of the class String is stored in String constant pool.

Let us first understand that, whenever you create any string; you create an object of type string. 
The string constants are also string objects.

System.out.println("Hello this is Teckpix Solution");

In above statement, the string “Hello this is Teckpix Solution” is a String constant.

Now let us understand the mutability of the String object with the help of an example.

String str=new String ("Teckpix");
str.concat("Solution");
system.out.println( str );
//output
Teckpix

In above code, I tried to concatenate the two strings “Teckpix” and “Solution”. 
As we know whenever a string is created that means the object of type String is created. 
Hence, the string “Teckpix” creates an object, whose reference is assigned to the string object “str”. 
Next, I tried to concatenate an another string “Solution” with the string “Teckpix” using the method “concat( )” of the class String.